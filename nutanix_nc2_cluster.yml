---
- name: Configure hibernation state of NC2
  hosts: all
  gather_facts: true

  pre_tasks:
    - name: Set facts for account information from Hashi Vault
      ansible.builtin.set_fact:
        prism_user: "{{ lookup('community.general.hashi_vault', update_prism_admin_str + ' ' + hv_credential_string) }}"
        prism_password: "{{ lookup('community.general.hashi_vault', update_prism_password_str + ' ' + hv_credential_string) }}"
        client_id: "{{ lookup('community.general.hashi_vault', update_nc2_client_id_str + ' ' + hv_credential_string) }}"
        client_secret: "{{ lookup('community.general.hashi_vault', update_nc2_client_secret_str + ' ' + hv_credential_string) }}"
        cluster_id: "{{ lookup('community.general.hashi_vault', update_nc2_cluster_id_str + ' ' + hv_credential_string) }}"
      no_log: true
      delegate_to: localhost

    - name: Get NC2 cluster current state
      ansible.builtin.include_tasks: clusterinfo.yml

    - name: Check that trigger file exits
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.hibernationoff"
      register: stat_result

  tasks:
    - name: Configure NC2 cluster for state of hibernate
      block:
        - name: Query NC2 cluster status is running
          ansible.builtin.include_tasks: clusterquery.yml
          vars:
            clusterstate: running

        - name: Get VM information from cluster
          ansible.builtin.include_tasks: vminfo.yml

        - name: Shutdown Prism Central VM
          ansible.builtin.include_tasks: vmstate.yml
          vars:
            currentvmstate: "on"
            transition_payload: "ACPI_SHUTDOWN"
            vmstatus: "Succeeded"
          when: managevm and not loginpe.json.metadata.total_entities >= 2

        - name: Set the NC2 cluster to hibernate
          ansible.builtin.uri:
            url: "{{ api_url_v1 }}/clusters/{{ cluster_id }}/hibernate"
            method: POST
            validate_certs: false
            body_format: json
            status_code: 200
            return_content: true
            headers:
              "X-Frame-ClientId": "{{ client_id }}"
              "X-Frame-Timestamp": "{{ etime }}"
              "X-Frame-Signature": "{{ hmackey }}"
          register: result
          #          ignore_errors: yes
          when: not loginpe.json.metadata.total_entities >= 2

        - name: Query NC2 cluster is hibernated
          ansible.builtin.include_tasks: clusterquery.yml
          vars:
            clusterstate: hibernated
          when: not loginpe.json.metadata.total_entities >= 2

        - name: Removing hibernation trigger file
          ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/.hibernationoff"
            state: absent
          when: not loginpe.json.metadata.total_entities >= 2

        - name: Do other VMS exist in cluster?
          ansible.builtin.debug:
            msg:
              - "********* VM systems exist will NOT HIBERNATE **************"
          when: loginpe.json.metadata.total_entities >= 2

      when: hibernatecluster | bool and 'running' in login.json.cluster_state

    - name: Configure NC2 cluster for state of running
      block:
        - name: Set NC2 cluster to running
          ansible.builtin.uri:
            url: "{{ api_url_v1 }}/clusters/{{ cluster_id }}/resume_cluster"
            method: POST
            validate_certs: false
            body_format: json
            status_code: 200
            return_content: true
            headers:
              "X-Frame-ClientId": "{{ client_id }}"
              "X-Frame-Timestamp": "{{ etime }}"
              "X-Frame-Signature": "{{ hmackey }}"
          register: result
        #          ignore_errors: yes

        - name: Query NC2 cluster is running
          ansible.builtin.include_tasks: clusterquery.yml
          vars:
            clusterstate: running

        - name: Get VM information from cluster
          ansible.builtin.include_tasks: vminfo.yml

        - name: Start Prism Central VM
          ansible.builtin.include_tasks: vmstate.yml
          vars:
            transition_payload: "on"
            currentvmstate: "off"
            vmstatus: "Succeeded"
          when: managevm

        - name: Creating hibernation trigger file
          ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/.hibernationoff"
            state: touch
            mode: 0744

      when: not hibernatecluster | bool and 'hibernated' in login.json.cluster_state
