---
- name: get info NC2
  hosts: all
  gather_facts: true
  vars:
    HIBERNATECLUSTER: false
    DOMAIN: "api-gateway-prod.frame.nutanix.com"
    etime: "{{ ansible_date_time.epoch }}"
    api_url_v1: "https://{{ DOMAIN }}/v1"
    qretries: 60
    qdelay: 60
    managevm: true
    update_prism_admin_str: 'dpp/data/nutanix/prism/central:username'
    update_prism_password_str: 'dpp/data/nutanix/prism/central:password'
    update_nc2_client_id_str: 'dpp/data/nutanix/nc2/{{ env }}:CLIENT_ID'
    update_nc2_client_secret_str: 'dpp/data/nutanix/nc2/{{ env }}:CLIENT_SECRET'
    update_nc2_cluster_id_str: 'dpp/data/nutanix/nc2/{{ env }}:CLUSTER_ID'
    hv_credential_string: "auth_method=approle url={{ hvurl }} role_id={{ dpp_hcv_role_id }} secret_id={{ dpp_hcv_secret_id }}"
    hvurl: "{{ lookup('env', 'ANSIBLE_HASHI_VAULT_ADDR') }}"
    dpp_hcv_role_id: "{{ lookup('env', 'ANSIBLE_HASHI_VAULT_ROLE_ID') }}"
    dpp_hcv_secret_id: "{{ lookup('env', 'ANSIBLE_HASHI_VAULT_SECRET_ID') }}"

  pre_tasks:

    - name: Set facts
      ansible.builtin.set_fact:
        prism_user: "{{ lookup('community.general.hashi_vault',  update_prism_admin_str + ' ' + hv_credential_string ) }}"
        prism_password: "{{ lookup('community.general.hashi_vault',  update_prism_password_str + ' ' + hv_credential_string) }}"
        CLIENT_ID: "{{ lookup('community.general.hashi_vault',  update_nc2_client_id_str + ' ' + hv_credential_string) }}"
        CLIENT_SECRET: "{{ lookup('community.general.hashi_vault',  update_nc2_client_secret_str + ' ' + hv_credential_string) }}"
        CLUSTER_ID: "{{ lookup('community.general.hashi_vault',  update_nc2_cluster_id_str + ' ' + hv_credential_string) }}"
      no_log: true
      delegate_to: localhost

    - name: Get cluster current state
      include_tasks: clusterinfo.yml

    - name: Check that trigger file exits
      stat:
        path: "{{ ansible_env.HOME }}/.hibernationoff"
      register: stat_result

  tasks:

#    - name: set url
#      set_fact:
#        api_url_v2: "https://{{ login.json.cluster_service_ip }}:9440/api/nutanix/v2.0/vms"
#        api_url_v3: "https://{{ login.json.cluster_service_ip }}:9440/api/nutanix/v2.0/tasks"
##        api_url_v2: "https://{{ login.json.load_balancer_dns_name }}:9440/api/nutanix/v2.0/vms"
##        api_url_v3: "https://{{ login.json.load_balancer_dns_name }}:9440/api/nutanix/v2.0/tasks"
        

    - name: Hibernate cluster
      block:

        - name: Query cluster is running
          include_tasks: clusterquery.yml
          vars:
            clusterstate: running

        - name: Get vm information from cluster
          include_tasks: vminfo.yml

        - name: Shutdown Prism Central VM
          include_tasks: vmstate.yml
          vars:
            currentvmstate: "on"
            transition_payload: "ACPI_SHUTDOWN"
            vmstatus: "Succeeded"
          when: managevm and not loginpe.json.metadata.total_entities >= 2 

        - name: Set the cluster to hibernate
          uri:
            url: "{{ api_url_v1 }}/clusters/{{ CLUSTER_ID }}/hibernate"
            method: POST 
            validate_certs: false
            body_format: json
            status_code: 200
            return_content: true
            headers:
              "X-Frame-ClientId": "{{ CLIENT_ID }}"
              "X-Frame-Timestamp": "{{ etime }}"
              "X-Frame-Signature": "{{ hmackey }}"
          register: result
#          ignore_errors: yes
          when: not loginpe.json.metadata.total_entities >= 2


        - name: Query cluster is hibernated
          include_tasks: clusterquery.yml
          vars:
            clusterstate: hibernated
          when: not loginpe.json.metadata.total_entities >= 2

        - name: Removing hibernation trigger file
          file:
            path: "{{ ansible_env.HOME }}/.hibernationoff"
            state: absent

      when: HIBERNATECLUSTER|bool and 'running' in login.json.cluster_state


    - name: Resume cluster
      block:
        - name: Set the cluster to running
          uri:
            url: "{{ api_url_v1 }}/clusters/{{ CLUSTER_ID }}/resume_cluster"
            method: POST
            validate_certs: false
            body_format: json
            status_code: 200
            return_content: true
            headers:
              "X-Frame-ClientId": "{{ CLIENT_ID }}"
              "X-Frame-Timestamp": "{{ etime }}"
              "X-Frame-Signature": "{{ hmackey }}"
          register: result
#          ignore_errors: yes

        - name: Query cluster is running
          include_tasks: clusterquery.yml
          vars:
            clusterstate: running

        - name: Get vm information from cluster
          include_tasks: vminfo.yml

        - name: Start Prism Central VM
          include_tasks: vmstate.yml
          vars:
            transition_payload: "on"
            currentvmstate: "off"
            vmstatus: "Succeeded"
          when: managevm

        - name: Creating hibernation trigger file
          file:
            path: "{{ ansible_env.HOME }}/.hibernationoff"
            state: touch

      when: not HIBERNATECLUSTER|bool and 'hibernated' in login.json.cluster_state
