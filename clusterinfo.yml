- name: Set epoch plus client_id
  ansible.builtin.set_fact:
    eclient_id: "{{ etime }}{{ client_id }}"

- name: User openssh to create hashmac
  ansible.builtin.shell: >
     set -o pipefail && \
     echo -n "{{ eclient_id }}" | openssl sha256 -hmac "{{ client_secret }}"
  register: hmac
  args:
    executable: /bin/bash
  changed_when: false

- name: Show ansible.builtin.debug
  ansible.builtin.debug:
    msg:
      - "{{ etime }}"
      - "{{ eclient_id }}"
      - "{{ hmac }}"
      - "{{ hmac.stdout }}"
      - "{{ hmac.stdout.split(' ')[1] }}"
  tags: never

- name: Set hmac key
  ansible.builtin.set_fact:
    hmackey: "{{ hmac.stdout.split(' ')[1] }}"

- name: Get cluster info on "{{ cluster_id }}"
  ansible.builtin.uri:
    url: "{{ api_url_v1 }}/clusters/{{ cluster_id }}"
    method: GET
    validate_certs: false
    body_format: json
    status_code: 200
    return_content: true
    headers:
      "X-Frame-ClientId": "{{ client_id }}"
      "X-Frame-Timestamp": "{{ etime }}"
      "X-Frame-Signature": "{{ hmackey }}"
  register: login

- name: Show results of login var
  ansible.builtin.debug:
    msg: "{{ login }}"
  tags: never

- name: Show cluster status of "{{ cluster_id }}"
  ansible.builtin.debug:
    msg:
      - "Cluster name: {{ login.json.name }}"
      - "Cluster state: {{ login.json.cluster_state }}"
      - "Cluster service ip: {{ login.json.cluster_service_ip }}"
